# Actuator info
info.app.name=Football Assistant
info.app.description=Useful info for football fans around the world
info.app.version=1.0.0

# Exposed Data REST endpoints
management.endpoints.web.exposure.include=*

# Base URL path for exposed REST endpoints
spring.data.rest.base-path=/api

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create-drop

# Show all executed sql commands
spring.jpa.show-sql = true

# Always run the resources/data.sql init file for the DB
spring.datasource.initialization-mode=always

# Queries used in user authentication
spring.queries.users-query=select email, password, active from users where email=?
spring.queries.roles-query=select u.email, r.role from users u inner join user_role ur on(u.user_id=ur.user_id) inner join roles r on(ur.role_id=r.role_id) where u.email=?

# PASTE DATASOURCE POSTGRES CREDENTIALS HERE (platform, url, username, password) - development only
spring.datasource.platform=postgres

spring.datasource.url=jdbc:postgresql://localhost:5433/footballAssistantDB

spring.datasource.username=footballAssistantUser

spring.datasource.password=tai2019
# END PASTE

# Used TheSportsDB API parameters
apiManager.apiKey=1
apiManager.apiUrlPrefix=https://www.thesportsdb.com/api/v1/json

# Auth //create your own keys https://developers.google.com/identity/sign-in/web/sign-in?authuser=1
spring.security.oauth2.client.registration.google.client-id=1098255007260-93ee0qs6f3ak9av6kjhvlf7t641s082d.apps.googleusercontent.com

spring.security.oauth2.client.registration.google.client-secret=I-fd2f85dp8jSIllG-Qd3RZy
